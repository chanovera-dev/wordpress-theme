/* contenido */
:is(.page, .single):not(.page-template-front-page) main .container :is(.content-section, .comments-section){padding:2rem 0;}
.single main .container .comments-section{display:grid; gap:4rem 7.5rem;}
:is(.page, .single) .content-section .content > *:not(:last-child){margin-bottom:1.7rem;}
:is(.page, .single) .content-section .content > h2:not(:first-child){padding-top:2.4rem;}
:is(.page, .single) .content-section .content > :is(ol, ul){list-style:disc; padding-left:1.5rem;}
:is(.page, .single) .content-section .content > .post-thumbnail{width:100%; aspect-ratio:16/9; object-fit:cover; border-radius:.6rem;}
:is(.page, .single) .content-section .content .wp-block-code code{background-color:var(--background-color-title-section); border:1px solid var(--border-color-input); padding:2rem; border-radius:.8rem;}
body .is-layout-flex{gap:0;}
.content .references{padding:2rem; border-radius:.6rem; background-color:var(--background-color-title-section);}
/* cajas de cÃ³digo */
.highlight-wrapper{display:block;}
.highlight{position:relative; z-index:0;}
.copy-button{
    visibility: hidden;
    position: absolute;
    top: 0;
    right: 0;
    z-index: 10;
    width: 5rem;
    cursor: pointer;
    white-space: nowrap;
    border-bottom-left-radius: 0.375rem;
    border-top-right-radius: 0.375rem;
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-neutral-200),var(--tw-bg-opacity));
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    font-family: ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,liberation mono,courier new,monospace;
    font-size: .875rem;
    line-height: 1.25rem;
    --tw-text-opacity: 1;
    color: rgba(var(--color-neutral-700),var(--tw-text-opacity));
    opacity: .9;
}
.prose .chroma {
    position: static;
    border-radius: 0.375rem;
    --tw-bg-opacity: 1;
    background-color: #f7f4f3;
    --tw-text-opacity: 1;
    color: rgba(var(--color-neutral-700),var(--tw-text-opacity));
}
.prose :where(pre code):not(:where([class~=not-prose] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
}
*,::before,::after {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / 0.5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia:
}
.prose {
    color: var(--tw-prose-body);
    max-width: 65ch
}

.prose :where([class~=lead]):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em
}

.prose :where(a):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
    text-decoration-color: rgba(var(--color-primary-300),1)
}

.prose :where(a):not(:where([class~=not-prose] *)):hover {
    color: rgba(var(--color-neutral),1);
    text-decoration: none;
    background-color: rgba(var(--color-primary-600),1);
    border-radius: .09rem
}

.prose :where(strong):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600
}

.prose :where(a strong):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(blockquote strong):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(thead th strong):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(ol):not(:where([class~=not-prose] *)) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em
}

.prose :where(ol[type=A]):not(:where([class~=not-prose] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type=a]):not(:where([class~=not-prose] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type=As]):not(:where([class~=not-prose] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type=as]):not(:where([class~=not-prose] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type=I]):not(:where([class~=not-prose] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type=i]):not(:where([class~=not-prose] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type=Is]):not(:where([class~=not-prose] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type=is]):not(:where([class~=not-prose] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type="1"]):not(:where([class~=not-prose] *)) {
    list-style-type: decimal
}

.prose :where(ul):not(:where([class~=not-prose] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em
}

.prose :where(ol>li):not(:where([class~=not-prose] *))::marker {
    font-weight: 400;
    color: var(--tw-prose-counters)
}

.prose :where(ul>li):not(:where([class~=not-prose] *))::marker {
    color: var(--tw-prose-bullets)
}

.prose :where(hr):not(:where([class~=not-prose] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em
}

.prose :where(blockquote):not(:where([class~=not-prose] *)) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-left-width: .25rem;
    border-left-color: var(--tw-prose-quote-borders);
    quotes: "\201C""\201D""\2018""\2019";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em
}

.prose :where(blockquote p:first-of-type):not(:where([class~=not-prose] *))::before {
    content: open-quote
}

.prose :where(blockquote p:last-of-type):not(:where([class~=not-prose] *))::after {
    content: close-quote
}

.prose :where(h1):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: .8888889em;
    line-height: 1.1111111
}

.prose :where(h1 strong):not(:where([class~=not-prose] *)) {
    font-weight: 900;
    color: inherit
}

.prose :where(h2):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333
}

.prose :where(h2 strong):not(:where([class~=not-prose] *)) {
    font-weight: 800;
    color: inherit
}

.prose :where(h3):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: .6em;
    line-height: 1.6
}

.prose :where(h3 strong):not(:where([class~=not-prose] *)) {
    font-weight: 700;
    color: inherit
}

.prose :where(h4):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: .5em;
    line-height: 1.5
}

.prose :where(h4 strong):not(:where([class~=not-prose] *)) {
    font-weight: 700;
    color: inherit
}

.prose :where(img):not(:where([class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(figure>*):not(:where([class~=not-prose] *)) {
    margin-top: 0;
    margin-bottom: 0
}

.prose :where(figcaption):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-captions);
    font-size: .875em;
    line-height: 1.4285714;
    margin-top: .8571429em
}

.prose :where(code):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: .875em
}

.prose :where(code):not(:where([class~=not-prose] *))::before {
    content: "`"
}

.prose :where(code):not(:where([class~=not-prose] *))::after {
    content: "`"
}

.prose :where(a code):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-code)
}

.prose :where(h1 code):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(h2 code):not(:where([class~=not-prose] *)) {
    color: inherit;
    font-size: .875em
}

.prose :where(h3 code):not(:where([class~=not-prose] *)) {
    color: inherit;
    font-size: .9em
}

.prose :where(h4 code):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(blockquote code):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(thead th code):not(:where([class~=not-prose] *)) {
    color: inherit
}

.prose :where(pre):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: .875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: .375rem;
    padding-top: .8571429em;
    padding-right: 1.1428571em;
    padding-bottom: .8571429em;
    padding-left: 1.1428571em
}

.prose :where(pre code):not(:where([class~=not-prose] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit
}

.prose :where(pre code):not(:where([class~=not-prose] *))::before {
    content: none
}

.prose :where(pre code):not(:where([class~=not-prose] *))::after {
    content: none
}

.prose :where(table):not(:where([class~=not-prose] *)) {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: .875em;
    line-height: 1.7142857
}

.prose :where(thead):not(:where([class~=not-prose] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders)
}

.prose :where(thead th):not(:where([class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-right: .5714286em;
    padding-bottom: .5714286em;
    padding-left: .5714286em
}

.prose :where(tbody tr):not(:where([class~=not-prose] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders)
}

.prose :where(tbody tr:last-child):not(:where([class~=not-prose] *)) {
    border-bottom-width: 0
}

.prose :where(tbody td):not(:where([class~=not-prose] *)) {
    vertical-align: baseline
}

.prose :where(tfoot):not(:where([class~=not-prose] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders)
}

.prose :where(tfoot td):not(:where([class~=not-prose] *)) {
    vertical-align: top
}

.prose {
    --tw-prose-body: rgba(var(--color-neutral-700), 1);
    --tw-prose-headings: rgba(var(--color-neutral-800), 1);
    --tw-prose-lead: rgba(var(--color-neutral-500), 1);
    --tw-prose-links: rgba(var(--color-primary-700), 1);
    --tw-prose-bold: rgba(var(--color-neutral-900), 1);
    --tw-prose-counters: rgba(var(--color-neutral-800), 1);
    --tw-prose-bullets: rgba(var(--color-neutral-500), 1);
    --tw-prose-hr: rgba(var(--color-neutral-200), 1);
    --tw-prose-quotes: rgba(var(--color-neutral-700), 1);
    --tw-prose-quote-borders: rgba(var(--color-primary-200), 1);
    --tw-prose-captions: rgba(var(--color-neutral-500), 1);
    --tw-prose-code: rgba(var(--color-secondary-700), 1);
    --tw-prose-pre-code: rgba(var(--color-neutral-700), 1);
    --tw-prose-pre-bg: rgba(var(--color-neutral-50), 1);
    --tw-prose-th-borders: rgba(var(--color-neutral-500), 1);
    --tw-prose-td-borders: rgba(var(--color-neutral-300), 1);
    --tw-prose-invert-body: rgba(var(--color-neutral-300), 1);
    --tw-prose-invert-headings: rgba(var(--color-neutral-50), 1);
    --tw-prose-invert-lead: rgba(var(--color-neutral-500), 1);
    --tw-prose-invert-links: rgba(var(--color-primary-400), 1);
    --tw-prose-invert-bold: rgba(var(--color-neutral), 1);
    --tw-prose-invert-counters: rgba(var(--color-neutral-400), 1);
    --tw-prose-invert-bullets: rgba(var(--color-neutral-600), 1);
    --tw-prose-invert-hr: rgba(var(--color-neutral-500), 1);
    --tw-prose-invert-quotes: rgba(var(--color-neutral-200), 1);
    --tw-prose-invert-quote-borders: rgba(var(--color-primary-900), 1);
    --tw-prose-invert-captions: rgba(var(--color-neutral-400), 1);
    --tw-prose-invert-code: rgba(var(--color-secondary-400), 1);
    --tw-prose-invert-pre-code: rgba(var(--color-neutral-200), 1);
    --tw-prose-invert-pre-bg: rgba(var(--color-neutral-700), 1);
    --tw-prose-invert-th-borders: rgba(var(--color-neutral-500), 1);
    --tw-prose-invert-td-borders: rgba(var(--color-neutral-700), 1);
    font-size: 1rem;
    line-height: 1.75
}

.prose :where(p):not(:where([class~=not-prose] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em
}

.prose :where(video):not(:where([class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(figure):not(:where([class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(li):not(:where([class~=not-prose] *)) {
    margin-top: .5em;
    margin-bottom: .5em
}

.prose :where(ol>li):not(:where([class~=not-prose] *)) {
    padding-left: .375em
}

.prose :where(ul>li):not(:where([class~=not-prose] *)) {
    padding-left: .375em
}

.prose :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
    margin-top: .75em;
    margin-bottom: .75em
}

.prose :where(.prose>ul>li>*:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose :where(.prose>ul>li>*:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose :where(.prose>ol>li>*:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose :where(.prose>ol>li>*:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose :where(ul ul,ul ol,ol ul,ol ol):not(:where([class~=not-prose] *)) {
    margin-top: .75em;
    margin-bottom: .75em
}

.prose :where(hr+*):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h2+*):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h3+*):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h4+*):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(thead th:first-child):not(:where([class~=not-prose] *)) {
    padding-left: 0
}

.prose :where(thead th:last-child):not(:where([class~=not-prose] *)) {
    padding-right: 0
}

.prose :where(tbody td,tfoot td):not(:where([class~=not-prose] *)) {
    padding-top: .5714286em;
    padding-right: .5714286em;
    padding-bottom: .5714286em;
    padding-left: .5714286em
}

.prose :where(tbody td:first-child,tfoot td:first-child):not(:where([class~=not-prose] *)) {
    padding-left: 0
}

.prose :where(tbody td:last-child,tfoot td:last-child):not(:where([class~=not-prose] *)) {
    padding-right: 0
}

.prose :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
    margin-bottom: 0
}

.prose :where(kbd):not(:where([class~=not-prose] *)) {
    background-color: rgba(var(--color-neutral-200),1);
    padding: .1rem .4rem;
    border-radius: .25rem;
    font-size: .9rem;
    font-weight: 600
}

.prose :where(mark):not(:where([class~=not-prose] *)) {
    color: rgba(var(--color-neutral-800),1);
    background-color: rgba(var(--color-secondary-200),1);
    padding: .1rem .2rem;
    border-radius: .12rem
}

/* comentarios */
.single .comments-section-wrapper{background-color:var(--background-color-contact-section);}
.comments :is(#comments, .commentlist){margin-bottom:1.7rem;}
#respond{display:grid; gap:1.7rem;}
.comments-section .comments .comment-respond .comment-form :is(.comment-form-comment, .comment-form-author, .comment-form-email, .comment-form-url){display:grid; gap:.5rem; margin-bottom:1.7rem;}
.comments-section .comments .comment-respond .comment-form :is(.logged-in-as, .comment-notes, .comment-form-cookies-consent){margin-bottom:1.7rem;}
/* checkbox */
.comment-respond .comment-form .comment-form-cookies-consent input[type=checkbox]{visibility:hidden;}
.comment-respond .comment-form .comment-form-cookies-consent input[type=checkbox]:focus{outline:0; box-shadow: 0 0 0 3px var(--color-emphasis);}
.comment-respond .comment-form .comment-form-cookies-consent input[type=checkbox] + label{position:relative; padding-left:0;}
.comment-respond .comment-form .comment-form-cookies-consent input[type=checkbox] + label:before{
    position:absolute; left:-2.3rem; top:.2rem; 
    border: 1px solid var(--border-color-contact-section); border-radius:.25rem;
    background-color:var(--background-color-input-contact-section);
    content:''; 
    width:1.4rem; height:1.4rem; 
    transition:all .3s ease-in, border-color .05s ease-in;
}
.comment-respond .comment-form .comment-form-cookies-consent input[type=checkbox]:checked + label:before{
    transform:rotate(40deg);
    border: 3px solid var(--color-emphasis);
    border-top-color:transparent;
    border-left-color:transparent;
    background-color:transparent;
    top:-.3rem;
    left:-2rem;
    width:.7rem;
    height:1.4rem;
}   
/* botÃ³n enviar */
.comment-respond .comment-form .form-submit input[type="submit"]{-moz-appearance:none; -webkit-appearance:none; display:inline-flex; align-items:center; margin-left:auto; height:4rem; padding:0 2rem; border-radius:.8rem; border:1px solid var(--background-color-button); background-color:var(--background-color-button); color:#fff; font-size:1.76rem; font-family:var(--wp--preset--font-family--system-font); transition:all .25s ease;}
.comment-respond .comment-form .form-submit input[type="submit"]:focus{outline:none; box-shadow:var(--color-emphasis);}